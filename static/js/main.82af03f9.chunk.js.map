{"version":3,"sources":["Component/Pages/NewPassword/NewPassword.module.css","Component/Pages/Registration/Registration.module.css","Component/Pages/Profile/Profile.module.css","Component/Pages/Error404/Error404.module.css","redux/profileReducer.ts","Component/Pages/Error404/Error404.tsx","api/api.ts","redux/authReducer.ts","redux/loginReducer.ts","redux/appReducer.ts","redux/forgotReducer.ts","Component/Pages/Login/Login.tsx","redux/packReducer.ts","Component/Pages/NewPassword/NewPassword.tsx","Component/Pages/PasswordRecovery/PasswordRecovery.tsx","Component/Pages/Registration/Registration.tsx","Component/Pages/Profile/Profile.tsx","Component/Packs/Packs.tsx","Component/Routes/Routes.tsx","Component/Header/Header.tsx","App.tsx","redux/store.ts","index.tsx","Component/Header/Header.module.css","Component/Packs/Packs.module.css","Component/Pages/PasswordRecovery/PasswordRecovery.module.css"],"names":["module","exports","ACTIONS_TYPE","Error404","className","s","errorOverlay","instance","axios","create","baseURL","withCredentials","headers","API","email","password","post","then","response","data","get","res","rememberMe","delete","from","message","myToken","CARDAPI","cardPacks","initialState","profile","isLogin","isRegistered","error","setError","type","SET_ERROR","setRegistration","dispatch","value","SET_IS_REGISTERED","catch","err","isLoggedIn","setIsLoggedInAC","SET_IS_LOGIN","setIsErrorAC","SET_IS_ERROR","loginTC","SET_PROFILE","ACTION_TYPE","isInitialized","status","initializeAppTC","SET_INITIALIZED_APP","Login","useDispatch","useSelector","state","login","formik","useFormik","initialValues","validate","values","errors","test","length","onSubmit","resetForm","to","Grid","container","justify","item","xs","handleSubmit","FormControl","FormGroup","TextField","label","margin","getFieldProps","touched","style","color","FormControlLabel","control","Checkbox","checked","Button","variant","info","infoNewPass","errorNewPass","setErrorPassRec","sendEmailPassRecTC","SET_OK","newPassTC","resetPasswordToken","SET_OK_NEW_PASS","SET_ERROR_NEW_PASS","NewPassword","passRec","history","useHistory","location","pathname","slice","newPassOverlay","spanText","labelCol","span","wrapperCol","name","remember","onFinish","newPassword1","onFinishFailed","errorInfo","console","log","Item","hasFeedback","rules","required","getFieldValue","validator","_","Promise","reject","Error","resolve","Password","htmlType","PasswordRecovery","errorPassRec","infoPassRec","passRecOverlay","nameRecPass","formRecPass","emailRecPass","setTimeout","Registration","auth","registrationOverlay","password1","width","serverError","Profile","profileOverlay","src","avatar","alt","token","_id","created","isAdmin","href","onClick","cardPacksTotalCount","maxCardsCount","minCardsCount","page","pageCount","getCardPacksTC","cards","SET_CARD_PACKS","Packs","pack","useEffect","header","marginRight","map","k","i","cardPacksWrapper","card","cardsCount","updated","marginLeft","PATH","Routes","path","exact","render","Header","nav","menuHover","items","activeClassName","activeLink","App","rootReducer","combineReducers","action","app","CHANGE_STATUS","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.82af03f9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"newPassOverlay\":\"NewPassword_newPassOverlay__1SDdp\",\"spanText\":\"NewPassword_spanText__3l6cJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registrationOverlay\":\"Registration_registrationOverlay__3EAxe\",\"serverError\":\"Registration_serverError__1DKFD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileOverlay\":\"Profile_profileOverlay__2Mdwa\",\"profile\":\"Profile_profile__3pHxS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorOverlay\":\"Error404_errorOverlay__2XWN1\"};","\nexport enum ACTIONS_TYPE {\n    SET_PROFILE = 'loginReducer/SET_PROFILE',\n}\nexport type ProfileType = {\n    avatar: string\n    created: string\n    email: string\n    isAdmin: boolean\n    name: string\n    publicCardPacksCount: number\n    rememberMe: boolean\n    token: string\n    tokenDeathTime: number\n    updated: string\n    verified: boolean\n    __v: number\n    _id: string\n}\nconst initialState = {\n    profile: null as null | ProfileType\n}\ntype InitialStateType = typeof initialState\n\nexport const profileReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\n    switch (action.type) {\n        case ACTIONS_TYPE.SET_PROFILE:\n            return {...state, profile: action.profile}\n        default:\n            return state\n    }\n}\n\n// actions\n\nexport const setProfileAC = (profile: ProfileType) => ({type: ACTIONS_TYPE.SET_PROFILE, profile} as const)\n\n//thunks\n\n\n//types\ntype ActionsType = ReturnType<typeof setProfileAC>\n","import React from 'react'\nimport s from './Error404.module.css'\n\nexport const Error404 = () => {\n\treturn (\n\t\t<div className={s.errorOverlay}>\n\t\t\tpage 404\n\t\t\tpage 404\n\t\t\tpage 404\n\t\t\tpage 404\n\t\t\tpage 404\n\t\t\tpage 404\n\t\t\tpage 404\n\t\t\tpage 404\n\t\t\tpage 404\n\t\t\tpage 404\n\t\t\tpage 404\n\t\t\tpage 404\n\n\t\t</div>\n\t)\n}","import axios from 'axios'\nimport {CardPackType} from \"../redux/packReducer\";\n\nconst instance = axios.create({\n    // baseURL: 'https://neko-back.herokuapp.com/2.0/', //heroku\n    baseURL: 'http://localhost:7542/2.0/',  //local\n    withCredentials: true,\n    headers: {}\n})\n\nexport const API = {\n    registration: (email: string, password: string) => {\n        return instance.post<RegistrationPostResponseType>('/auth/register', {email, password}).then(response => {\n            return response.data\n        })\n    },\n    authMe: () => {\n        return instance.get('auth/me').then(res => {\n            return res.data\n        })\n    },\n    login: (email: string | null, password: string | null, rememberMe: boolean = true) => {\n        return instance.post<LoginResponseType>('auth/login', {email, password, rememberMe}).then(response => {\n            return response.data\n        })\n    },\n    logOut: () => {\n        return instance.delete<LogOutResponseType>(`auth/me`)\n    },\n    //for passRecovery\n    passRec: (email: string, from: string, message: string) => {\n        return instance.post<PassRecResponseType>('auth/forgot', {email, from, message})\n          .then(response => { return response.data })\n    },\n    newPass: (password: string, myToken: string) => {\n        return instance.post<NewPassResponseType> ('/auth/set-new-password', {password, myToken})\n          .then(response => { return response.data })\n    }\n\n}\nexport const CARDAPI = {\n    getCardPacks:() =>{\n        return instance.get<GetCardPacksResponseType>(`/cards/pack`).then(res =>  res.data.cardPacks)\n    },\n}\n\n\n//types\nexport type LogOutResponseType = {\n    info: string\n    error: string\n}\n\nexport type LoginResponseType = {\n    avatar: string\n    created: string\n    email: string\n    isAdmin: boolean\n    name: string\n    publicCardPacksCount: number\n    rememberMe: boolean\n    token: string\n    tokenDeathTime: number\n    updated: string\n    verified: boolean\n    __v: number\n    _id: string\n}\n\nexport type AuthLoginType = {\n    email: string\n    password: string\n    rememberMe: true\n}\n\nexport type RegistrationPostDataType = { email: string, password: string }\nexport type RegistrationPostResponseType = { addedUser: any, error?: string }\n\n//for PasswordRec\nexport type PassRecType = {\n    email: string\n    from: string\n    message: string\n}\nexport type PassRecResponseType = {\n    answer: boolean\n    html: boolean\n    info: string\n    success: boolean\n}\n\n//types for Cards\nexport type GetCardPacksResponseType = {\n    cardPacks: Array<CardPackType>\n    cardPacksTotalCount: number\n    maxCardsCount: number\n    minCardsCount: number\n    page: number\n    pageCount: number\n}\n\nexport type AddPackType = {\n    name?: string\n    deckCover?: string\n    private?: boolean\n}\n\nexport type UpdatePackType = {\n    _id: string\n    name?: string\n}\n\nexport type NewPassResponseType = {\n    info: string\n    error: string\n}\n","import  { RegistrationPostDataType, API} from \"../api/api\"\nimport {Dispatch} from 'redux'\n\n\nexport enum ACTIONS_TYPE {\n    SET_IS_LOGIN = 'authReducer/SET_IS_LOGIN',\n    SET_IS_REGISTERED = 'authReducer/SET_IS_REGISTERED',\n    SET_ERROR = 'authReducer/SET_ERROR',\n}\n\nconst initialState = {\n    isLogin: false,\n    isRegistered: false,\n    error: ''\n}\n\ntype InitialStateType = typeof initialState\n\nexport const authReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\n    switch (action.type) {\n        case ACTIONS_TYPE.SET_IS_LOGIN:\n            return {...state, isLogin: action.value}\n        case ACTIONS_TYPE.SET_IS_REGISTERED:\n            return {...state, isRegistered: action.value}\n        case ACTIONS_TYPE.SET_ERROR:\n            return {...state, error: action.error}\n        default:\n            return state\n    }\n}\n\nexport const setIsLogin = (value: boolean) => ({type: ACTIONS_TYPE.SET_IS_LOGIN, value} as const)\nexport const setIsRegistered = (value: boolean) => ({type: ACTIONS_TYPE.SET_IS_REGISTERED, value} as const)\nexport const setError = (error: string) => ({type: ACTIONS_TYPE.SET_ERROR, error} as const)\n\n// thunks\nexport const setRegistration = (data: RegistrationPostDataType) => (dispatch: Dispatch) => {\n    API.registration(data.email, data.password)\n        .then(res => {\n            dispatch(setIsRegistered(true))})\n        .catch(err => {\n            // dispatch(setError(err.message))\n            dispatch(setError('Email already exists'))\n        })\n\n}\n\n// types\ntype ActionsType =\n    | ReturnType<typeof setIsLogin>\n    | ReturnType<typeof setIsRegistered>\n    | ReturnType<typeof setError>\n","import  {AuthLoginType, API} from '../api/api'\nimport {Dispatch} from 'redux'\nimport {setProfileAC} from './profileReducer'\nimport {setIsLogin} from \"./authReducer\";\n\nexport enum ACTIONS_TYPE {\n    SET_IS_LOGIN = 'loginReducer/SET-IS-LOGGED-IN',\n    SET_IS_ERROR = 'loginReducer/SET-IS-ERROR',\n}\n\nconst initialState = {\n    isLoggedIn: false,\n    error: '',\n}\ntype InitialStateType = typeof initialState\n\nexport const loginReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\n    switch (action.type) {\n        case ACTIONS_TYPE.SET_IS_LOGIN:\n            return {...state, isLoggedIn: action.value}\n        case ACTIONS_TYPE.SET_IS_ERROR:\n            return {...state, error: action.error}\n        default:\n            return state\n    }\n}\n\n// actions\nexport const setIsLoggedInAC = (value: boolean) => ({type: ACTIONS_TYPE.SET_IS_LOGIN, value} as const)\nexport const setIsErrorAC = (error: string) => ({type: ACTIONS_TYPE.SET_IS_ERROR, error} as const)\n\n//thunks\nexport const loginTC = (data: AuthLoginType) => (dispatch: Dispatch) => {\n    API.login(data.email, data.password, data.rememberMe)\n        .then(res => {\n            dispatch(setIsLoggedInAC(true))\n            dispatch(setIsLogin(true))\n            dispatch(setProfileAC(res))\n        })\n        .catch(err => {\n            dispatch(setIsErrorAC(err.error))\n        })\n}\nexport const logOutTC = () => (dispatch: Dispatch) => {\n    API.logOut()\n        .then(res => {\n            dispatch(setIsLoggedInAC(false))\n        })\n        .catch(err => {\n            dispatch(setIsErrorAC(err.error))\n        })\n}\n\n//types\ntype ActionsType = ReturnType<typeof setIsLoggedInAC> | ReturnType<typeof setIsErrorAC>\n\n\n","import {Dispatch} from 'redux'\nimport {API} from \"../api/api\";\n\nexport enum ACTIONS_TYPE {\n    SET_INITIALIZED_APP = 'appReducer/SET_INITIALIZED_APP',\n    CHANGE_STATUS= 'appReducer/CHANGE_STATUS',\n}\n\nconst initialState = {\n    isInitialized: false,\n    status: 'idle',\n}\n\ntype InitialStateType = typeof initialState\n\nexport const appReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\n    switch (action.type) {\n        // case ACTIONS_TYPE.SET_INITIALIZED_APP:\n        //     return {...state, isInitialized: action.value}\n        case ACTIONS_TYPE.CHANGE_STATUS:\n            return {...state, isInitialized: action.value}\n        default:\n            return state\n    }\n}\nexport const isInitializedAC = (value: boolean) => ({type: ACTIONS_TYPE.SET_INITIALIZED_APP, value} as const)\nexport const change_statusAC = (value: boolean) => ({type: ACTIONS_TYPE.CHANGE_STATUS, value} as const)\n// thunks\n\nexport const initializeAppTC = () => (dispatch: Dispatch) => {\n    API.authMe()\n        .then(res => {\n            debugger\n            dispatch(isInitializedAC(true))\n    })\n}\n// types\ntype ActionsType =\n    | ReturnType<typeof isInitializedAC>\n    | ReturnType<typeof change_statusAC>\n","import {PassRecType, API} from '../api/api'\nimport {Dispatch} from 'redux'\n\nenum ACTION_TYPE {\n\tSET_OK = 'forgotReducer/SET_OK',\n\tSET_ERROR = 'forgotReducer/SET_ERROR',\n\tSET_OK_NEW_PASS = 'forgotReducer/SET_OK_NEW_PASS',\n\tSET_ERROR_NEW_PASS = 'forgotReducer/SET_ERROR_NEW_PASS'\n}\n\nconst initialState = {\n\tinfo: 'To recover your password, enter your registration email:',\n\tinfoNewPass: 'Enter you new password: ',\n\terror: '',\n\terrorNewPass: ''\n}\n\ntype InitialStateType = typeof initialState\n\nexport const forgotReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\n\tswitch (action.type) {\n\t\tcase ACTION_TYPE.SET_OK:\n\t\t\treturn {...state, info: action.info}\n\t\tcase ACTION_TYPE.SET_ERROR:\n\t\t\treturn {...state, error: action.error}\n\t\tcase ACTION_TYPE.SET_OK_NEW_PASS:\n\t\t\treturn {...state, infoNewPass: action.infoNewPass}\n\t\tcase ACTION_TYPE.SET_ERROR_NEW_PASS:\n\t\t\treturn {...state, errorNewPass: action.errorNewPass}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport const setOkPassRecAC = (info: string) => ({type: ACTION_TYPE.SET_OK, info } as const)\nexport const setErrorPassRec = (error: string) => ({type: ACTION_TYPE.SET_ERROR, error} as const)\n\nexport const setOkNewPassAC = (infoNewPass: string) => ({type: ACTION_TYPE.SET_OK_NEW_PASS, infoNewPass} as const)\nexport const setErrorNewPass = (errorNewPass: string) => ({type: ACTION_TYPE.SET_ERROR_NEW_PASS, errorNewPass } as const)\n\n\nexport const sendEmailPassRecTC = (data: PassRecType) => (dispatch: Dispatch<ActionType>) => {\n\tAPI.passRec(data.email, data.from, data.message)\n\t\t.then(response => { dispatch(setOkPassRecAC( response.info ))})\n\t\t.catch(error => { dispatch(setErrorPassRec('Such email is not registered'))})\n}\n\nexport const newPassTC = (password: string, resetPasswordToken: string) => (dispatch: Dispatch<ActionType>) => {\n\tAPI.newPass(password, resetPasswordToken)\n\t\t.then(res => {dispatch(setOkNewPassAC('password change'))})\n\t\t.catch(err => {dispatch(setErrorNewPass('error new password'))})\n}\n\ntype ActionType = ReturnType<typeof setOkPassRecAC>\n\n  \t\t\t\t\t\t\t| ReturnType<typeof setErrorPassRec>\n\t\t\t\t\t\t\t\t| ReturnType<typeof setOkNewPassAC>\n\t\t\t\t\t\t\t\t| ReturnType<typeof setErrorNewPass>\n\n","import React, {useEffect} from 'react'\nimport s from './Login.module.css'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {useFormik} from \"formik\";\nimport {Checkbox, FormControl, FormControlLabel, FormGroup, TextField, Button, Grid} from '@material-ui/core'\nimport {loginTC} from \"../../../redux/loginReducer\";\nimport {AppRootStateType} from \"../../../redux/store\";\nimport { Redirect } from 'react-router-dom';\nimport { initializeAppTC } from '../../../redux/appReducer';\n\n\n\nexport type AuthLoginType = {\n\temail: string\n\tpassword: string\n\trememberMe: true\n}\ntype FormikErrorType = {\n\temail?: string,\n\tpassword?: string,\n\trememberMe?: boolean,\n}\n\nexport const Login = () => {\n\tconst dispatch = useDispatch()\n\tconst isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.login.isLoggedIn)\n\n\n\tconst formik = useFormik({\n\t\tinitialValues: {\n\t\t\temail: 'nya-admin@nya.nya',\n\t\t\tpassword: '1qazxcvBG',\n\t\t\trememberMe: true\n\t\t},\n\t\tvalidate: (values: AuthLoginType) => {\n\t\t\tconst errors: FormikErrorType = {};\n\t\t\tif (!values.email) {\n\t\t\t\terrors.email = 'Поле email обязательно';\n\t\t\t} else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n\t\t\t\terrors.email = 'Невалидный email';\n\t\t\t} if (!values.password) {\n\t\t\t\terrors.password = 'Поле обязательно';\n\t\t\t} else if(values.password.length < 3) {\n\t\t\t\terrors.password = 'Длина пароля должна быть больше 3 символов';\n\t\t\t}\n\t\t\treturn errors;\n\t\t},\n\t\tonSubmit: values => {\n\t\t\tdispatch(loginTC({email:values.email, password:values.password, rememberMe: values.rememberMe}))\n\t\t\tdispatch(initializeAppTC())\n\t\t\tformik.resetForm();\n\t\t},\n\t})\n\n\tif(isLoggedIn) {\n\t\treturn <Redirect to={'/profile'}/>\n\t}\n\n\treturn <Grid container justify=\"center\">\n\t\t<Grid item xs={4}>\n\t\t\t<form onSubmit={formik.handleSubmit}>\n\t\t\t\t<FormControl>\n\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t<p>To log in use common test account credentials:</p>\n\t\t\t\t\t\t<p><span>Email: </span> nya-admin@nya.nya</p>\n\t\t\t\t\t\t<p><span>Password: </span> 1qazxcvBG</p>\n\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tlabel=\"Email\"\n\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t{...formik.getFieldProps('email')}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{formik.touched.email && formik.errors.email ? <div style={{color: \"red\"}}>{formik.errors.email}</div> : null}\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t{...formik.getFieldProps('password')}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{formik.touched.password && formik.errors.password ? <div style={{color: \"red\"}}>{formik.errors.password}</div> : null}\n\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\tlabel={'Remember me'}\n\t\t\t\t\t\t\tcontrol={<Checkbox\n\t\t\t\t\t\t\t\tchecked={formik.values.rememberMe}\n\t\t\t\t\t\t\t\t{...formik.getFieldProps('rememberMe')}\n\t\t\t\t\t\t\t/>}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{formik.touched.rememberMe && formik.errors.rememberMe ? <div style={{color: \"red\"}}>{formik.errors.rememberMe}</div> : null}\n\t\t\t\t\t\t<Button type={'submit'} variant={'contained'} color={'primary'}>Login</Button>\n\t\t\t\t\t</FormGroup>\n\t\t\t\t</FormControl>\n\t\t\t</form>\n\n\t\t</Grid>\n\t</Grid>\n}\n","import {Dispatch} from \"redux\";\nimport {CARDAPI} from \"../api/api\";\n\n\nexport enum ACTIONS_TYPE {\n    SET_CARD_PACKS = 'packsReducer/SET_CARD_PACKS'\n}\n\nconst initialState = {\n    cardPacks: [] as Array<CardPackType>,\n    cardPacksTotalCount: 0,\n    maxCardsCount: 1000,\n    minCardsCount: 0,\n    page: 1,\n    pageCount: 10,\n}\ntype InitialStateType = typeof initialState\n\n\nexport const packsReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\n    switch (action.type) {\n        case ACTIONS_TYPE.SET_CARD_PACKS:\n            return {\n                ...state,\n                cardPacks: [...state.cardPacks, ...action.cards]\n            }\n        default:\n            return state\n    }\n}\n\n// actions\nexport const setCardPacksAC = (cards: Array<CardPackType>) => ({type: ACTIONS_TYPE.SET_CARD_PACKS, cards} as const)\n\n//thunks\nexport const getCardPacksTC = () => (dispatch: Dispatch) => {\n    CARDAPI.getCardPacks().then(res => {\n        dispatch(setCardPacksAC(res))\n    })\n\n}\n\n\n//types\nexport type ActionsType = ReturnType<typeof setCardPacksAC>\nexport type CardPackType = {\n    \"_id\": string\n    \"user_id\": string\n    \"user_name\": string\n    \"private\": boolean\n    \"name\": string\n    \"path\": string\n    \"grade\": number\n    \"shots\": number\n    \"cardsCount\": number\n    \"type\": string\n    \"rating\": number\n    \"created\": string\n    \"updated\": string\n    \"more_id\": string\n    \"__v\": number\n    \"deckCover\": null | any\n}\n","import React from 'react'\nimport s from './NewPassword.module.css'\nimport {Button, Form, Input} from \"antd\"\nimport { newPassTC } from '../../../redux/forgotReducer'\nimport {useDispatch, useSelector} from \"react-redux\"\nimport { useHistory } from \"react-router-dom\"\nimport {AppRootStateType} from \"../../../redux/store\";\n\nexport const NewPassword = () => {\n\n\tconst dispatch = useDispatch()\n\tconst error = useSelector<AppRootStateType, string>(state => state.passRec.errorNewPass)\n\tconst infoNewPass = useSelector<AppRootStateType, string>(state => state.passRec.infoNewPass)\n\tconst history = useHistory()\n\n\tconst resetPasswordToken = history.location.pathname.slice(10, history.location.pathname.length)\n\n\tconst layout = {\n\t\tlabelCol: {span: 8},\n\t\twrapperCol: {span: 16},\n\t}\n\n\tconst onFinish = (values: any) => {\n\t\tdispatch( newPassTC(values.newPassword1, resetPasswordToken) );\n\t}\n\n\tconst onFinishFailed = (errorInfo: any) => {\n\t\tconsole.log('Failed:', errorInfo)\n\t}\n\n\treturn (\n\t\t<div className={s.newPassOverlay}>\n\t\t\t<span className={s.spanText}>{infoNewPass}</span>\n\t\t\t<Form  {...layout} name=\"basic\"\n\t\t\t       initialValues={{remember: true}}\n\t\t\t       onFinish={onFinish}\n\t\t\t       onFinishFailed={onFinishFailed}>\n\n\t\t\t\t<Form.Item label=\"new password: \" name=\"newPassword1\" hasFeedback\n\t\t\t\t           rules={[\n\t\t\t\t\t           {required: true, message: 'Please input your password!'},\n\t\t\t\t\t           ({getFieldValue}) => ({\n\t\t\t\t\t\t           validator(_, value) {\n\t\t\t\t\t\t\t           if (value.length < 8){return Promise.reject(new Error('8 and more symbols...'))} else\n\t\t\t\t\t\t\t           if (value.length > 8 || !value || getFieldValue('password1') === value) {\n\t\t\t\t\t\t\t\t           return Promise.resolve()\n\t\t\t\t\t\t\t           }\n\t\t\t\t\t\t\t           return Promise.reject(new Error('Two passwords do not match!'))\n\t\t\t\t\t\t           },\n\t\t\t\t\t           }),]}>\n\t\t\t\t\t<Input.Password/>\n\t\t\t\t</Form.Item>\n\n\t\t\t\t<Form.Item label=\"repeat password: \" name=\"newPassword2\"  hasFeedback\n\t\t\t\t           rules={[\n\t\t\t\t\t           {\n\t\t\t\t\t\t           required: true,\n\t\t\t\t\t\t           message: 'Please confirm your password!',\n\t\t\t\t\t           },\n\t\t\t\t\t           ({getFieldValue}) => ({\n\t\t\t\t\t\t           validator(_, value) {\n\t\t\t\t\t\t\t           if (value.length < 8){return Promise.reject(new Error('8 and more symbols...'))} else\n\t\t\t\t\t\t\t           if (value.length > 8 || !value || getFieldValue('password1') === value) {\n\t\t\t\t\t\t\t\t           return Promise.resolve()\n\t\t\t\t\t\t\t           }\n\t\t\t\t\t\t\t           return Promise.reject(new Error('Two passwords do not match!'))\n\t\t\t\t\t\t           },\n\t\t\t\t\t           }),\n\t\t\t\t           ]}>\n\t\t\t\t\t<Input.Password/>\n\t\t\t\t</Form.Item>\n\n\t\t\t\t<Button type=\"primary\" htmlType=\"submit\">change password</Button>\n\n\t\t\t</Form>\n\t\t\t<div>{error}</div>\n\t\t</div>\n\t)\n}","import React from 'react'\nimport {Form, Input, Button } from 'antd'\nimport s from './PasswordRecovery.module.css'\nimport {sendEmailPassRecTC, setErrorPassRec} from \"../../../redux/forgotReducer\"\nimport {useDispatch, useSelector} from \"react-redux\"\nimport {AppRootStateType} from \"../../../redux/store\"\n\nexport const PasswordRecovery = () => {\n\n\tconst dispatch = useDispatch()\n\n\tconst errorPassRec = useSelector<AppRootStateType, string>(state => state.passRec.error)\n\tconst infoPassRec = useSelector<AppRootStateType, string>(state => state.passRec.info)\n\n\tconst from = \"THE BEST MY TEAM baranov.sys@gmail.com\"\n\tconst message = `<div>\n\t\t\t\t\t\t\t\t\t\t\tвы отправили запрос на восстановления пароля, для продожения перейдите по ссылке:\n\t\t\t\t\t\t\t\t\t\t\t<a href='https://baranovaleksei.github.io/teamProject/#/new-pass/$token$'>link</a>\n\t\t\t\t\t\t\t\t\t\t\tесли это были на Вы - то ничего не делайте\n\t\t\t\t\t\t\t\t\t</div>`\n\n\n\tconst onFinish = (values: any) => {\n\t\tdispatch(sendEmailPassRecTC({ email: values.emailRecPass, message: message, from: from}))\n\t\tsetTimeout(() => {\n\t\t\tdispatch(setErrorPassRec(''))\n\t\t}, 5000)\n\t}\n\n\treturn (\n\t\t<div className={s.passRecOverlay}>\n\n\t\t\t<span className={s.nameRecPass}>{infoPassRec}</span>\n\t\t\t<Form className={s.formRecPass}\n\t\t\t\tname=\"recoveryPass\"\n\t\t\t\tinitialValues={{ remember: true }}\n\t\t\t\tonFinish={onFinish}>\n\n\t\t\t\t<Form.Item\n\t\t\t\t\tlabel=\"Email\"\n\t\t\t\t\tname=\"emailRecPass\"\n\t\t\t\t\trules={[{ type: 'email', required: true, message: 'Please input your email' }]}\n\t\t\t\t>\n\t\t\t\t\t<Input />\n\n\t\t\t\t</Form.Item>\n\t\t\t\t\t<span className={s.nameRecPass}> {errorPassRec} </span>\n\t\t\t\t<Form.Item>\n\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\">\n\t\t\t\t\t\tsend message\n\t\t\t\t\t</Button>\n\t\t\t\t</Form.Item>\n\n\t\t\t</Form>\n\t\t</div>\n\t)\n}","import React from 'react'\nimport s from './Registration.module.css'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {AppRootStateType} from '../../../redux/store'\nimport {setError, setRegistration} from '../../../redux/authReducer'\nimport {Redirect} from 'react-router-dom'\nimport {Form, Input, Button} from 'antd'\n\n\nexport const Registration = () => {\n    const dispatch = useDispatch()\n    const isRegistered = useSelector<AppRootStateType, boolean>(state => state.auth.isRegistered)\n    const error = useSelector<AppRootStateType, string>(state => state.auth.error)\n    const layout = {\n        labelCol: {span: 8},\n        wrapperCol: {span: 16},\n    }\n    const onFinish = (values: any) => {\n        dispatch(setRegistration({email: values.email, password: values.password1}))\n        setTimeout(() => {\n            dispatch(setError(''))\n        }, 10000)\n    }\n\n    const onFinishFailed = (errorInfo: any) => {\n        console.log('Failed:', errorInfo)\n    }\n\n\n    if (isRegistered) {\n        return <Redirect to={'/login'}/>\n    }\n\n    return (\n        <div className={s.registrationOverlay}>\n\n\n            <Form  {...layout} name=\"basic\"  initialValues={{remember: true}} onFinish={onFinish}\n                   onFinishFailed={onFinishFailed}>\n                <Form.Item label=\"email\" name=\"email\"\n                    rules={[\n                        {required: true, message: 'Please input your email!'},\n                        {type: 'email', message: 'The input is not valid E-mail!',}\n                    ]}>\n                    <Input style={{width: '100%'}} />\n                </Form.Item>\n\n                <Form.Item label=\"Password1\" name=\"password1\" hasFeedback\n                           rules={[\n                               {required: true, message: 'Please input your password!'},\n                               ({getFieldValue}) => ({\n                                   validator(_, value) {\n                                       if (value.length < 8){return Promise.reject(new Error('8 and more symbols...'))} else\n                                       if (value.length > 8 || !value || getFieldValue('password1') === value) {\n                                           return Promise.resolve()\n                                       }\n                                       return Promise.reject(new Error('Two passwords do not match!'))\n                                   },\n                               }),]}>\n                    <Input.Password/>\n                </Form.Item>\n\n                <Form.Item label=\"Password2\" name=\"password2\"  hasFeedback\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please confirm your password!',\n                        },\n                        ({getFieldValue}) => ({\n                            validator(_, value) {\n                                if (value.length < 8){return Promise.reject(new Error('8 and more symbols...'))} else\n                                if (value.length > 8 || !value || getFieldValue('password1') === value) {\n                                    return Promise.resolve()\n                                }\n                                return Promise.reject(new Error('Two passwords do not match!'))\n                            },\n                        }),\n                    ]}>\n                    <Input.Password/>\n                </Form.Item>\n\n                <Button type=\"primary\" htmlType=\"submit\">Button</Button>\n                <div className={s.serverError}>{error}</div>\n            </Form>\n        </div>\n    )\n}\n","import React, {useEffect} from 'react'\nimport s from './Profile.module.css'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {AppRootStateType} from '../../../redux/store'\nimport {initializeAppTC} from '../../../redux/appReducer'\nimport {Redirect} from 'react-router-dom'\nimport {ProfileType, setProfileAC} from '../../../redux/profileReducer'\nimport {logOutTC} from '../../../redux/loginReducer'\n\nexport const Profile = () => {\n    const dispatch = useDispatch()\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.login.isLoggedIn)\n    const profile = useSelector<AppRootStateType, ProfileType | null>(state => state.profile.profile)\n    const isLogin = useSelector<AppRootStateType,  boolean>(state=> state.auth.isLogin)\n\n\n    console.log('isLogin', isLogin)\n\n    if (!isLoggedIn) {\n        return <Redirect to={'/login'}/>\n    }\n    const logout = () => {\n    \tdispatch(logOutTC())\n\t}\n     return (\n        <div className={s.profileOverlay}>\n            {profile &&\n\t\t\t\t<div className={s.profile}>\n\t\t\t\t\t<img src={profile.avatar} alt=\"\"/>\n\t\t\t\t\t<div>\n\t\t\t\t\t\tname: {profile.name} <br/>\n\t\t\t\t\t\ttoken: {profile.token} <br/>\n\t\t\t\t\t\t_id: {profile._id}<br/>\n\t\t\t\t\t\temail: {profile.email}<br/>\n\t\t\t\t\t\tcreated: {profile.created}<br/>\n\t\t\t\t\t\tadmin: {profile.isAdmin ? 'yes' : 'no'}<br/>\n\n                        <a href=\"/packs\"> Packs</a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div><button onClick={logout}>Log out</button></div>\n\n\t\t\t\t</div>\n\n            }\n        </div>\n    )\n}\n","import React, {useEffect} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"../../redux/store\";\nimport s from './Packs.module.css'\nimport {CardPackType, getCardPacksTC} from \"../../redux/packReducer\";\nimport {Button} from \"antd\";\n\nexport const Packs = () => {\n    const dispatch = useDispatch()\n    const cardPacks = useSelector<AppRootStateType,  Array<CardPackType>>(state => state.pack.cardPacks)\n\n\n    useEffect(() => {\n        dispatch(getCardPacksTC())\n    }, [])\n    return (\n        <div className={s.container}>\n            <div className={s.header}>\n                <p>Name</p>\n                <p style={{marginRight: \"120px\"}}>cardsCount</p>\n                <p>updated</p>\n                <p>Add</p>\n            </div>\n            {cardPacks.map((k, i) => <ul key={i} className={s.cardPacksWrapper}>\n            <li className={s.card}>{k.name}</li>\n            <li className={s.card}>{k.cardsCount}</li>\n            <li className={s.card}>{k.updated}</li>\n                <Button type=\"primary\">delete</Button>\n                <Button style={{marginLeft: \"10px\"}} type=\"primary\" >update</Button>\n            </ul>)}\n\n        </div>\n    )\n}\n\n","import React, {useEffect} from 'react'\nimport {Switch, Route, Redirect} from 'react-router-dom'\nimport {Error404} from \"../Pages/Error404/Error404\";\nimport {Login} from \"../Pages/Login/Login\";\nimport {NewPassword} from \"../Pages/NewPassword/NewPassword\";\nimport {PasswordRecovery} from \"../Pages/PasswordRecovery/PasswordRecovery\";\nimport {Registration} from \"../Pages/Registration/Registration\";\nimport {Profile} from \"../Pages/Profile/Profile\";\nimport {useDispatch, useSelector} from 'react-redux'\nimport {AppRootStateType} from '../../redux/store'\nimport {initializeAppTC} from '../../redux/appReducer'\nimport {Packs} from \"../Packs/Packs\";\n\nexport const PATH = {\n\tLOGIN: '/login',\n\tREGISTRATION: '/registration',\n\tPASSWORD_RECOVERY: '/pass-recovery',\n\tNEW_PASSWORD: '/new-pass',\n\tPROFILE: '/profile',\n\tPACKS: '/packs'\n}\n\nfunction Routes() {\n\treturn (\n\t\t<div>\n\t\t\t<Switch>\n\t\t\t\t{/*в начале мы попадаем на страницу \"/\" и переходим сразу на страницу Login*/}\n\t\t\t\t{/*exact нужен чтоб указать полное совподение (что после \"/\" ничего не будет)*/}\n\t\t\t\t<Route path={\"/\"} exact render={ () => <Redirect to={ PATH.LOGIN }/> }/>\n\t\t\t\t<Route path={\"/teamProject\"} exact render={ () => <Profile/> }/>\n\n\t\t\t\t<Route path={ PATH.LOGIN } render={ () => <Login/> } />\n\t\t\t\t<Route path={ PATH.REGISTRATION } render={ () => <Registration /> } />\n\t\t\t\t<Route path={ PATH.PASSWORD_RECOVERY } render={ ()=> <PasswordRecovery/> } />\n\t\t\t\t<Route path={ PATH.NEW_PASSWORD } render={ ()=> <NewPassword/> } />\n\t\t\t\t<Route path={ PATH.PROFILE } render={ ()=> <Profile/> } />\n\t\t\t\t<Route path={ PATH.PACKS } render={ ()=> <Packs/> } />\n\n\t\t\t\t<Route path={'/404'} render={() => <Error404/>}/>\n\t\t\t\t<Redirect from={'*'} to={'/404'}/>\n\n\t\t\t</Switch>\n\t\t</div>\n\t)\n}\n\nexport default Routes\n","import React from 'react'\nimport s from './Header.module.css'\nimport {PATH} from \"../Routes/Routes\"\nimport {NavLink} from \"react-router-dom\"\n\nfunction Header() {\n\treturn (\n\t\t<div className={s.nav}>\n\t\t\t<button className={ s.menuHover }> Меню </button>\n\t\t\t<div className={s.items}>\n\t\t\t\t<div className={ s.item }>\n\t\t\t\t\t<NavLink to= { PATH.PROFILE } activeClassName = { s.activeLink }>Profile</NavLink>\n\t\t\t\t</div>\n\t\t\t\t<div className={ s.item }>\n\t\t\t\t\t<NavLink to={ PATH.LOGIN } activeClassName = { s.activeLink }>Login</NavLink>\n\t\t\t\t</div>\n\t\t\t\t<div className={ s.item }>\n\t\t\t\t\t<NavLink to={ PATH.REGISTRATION } activeClassName = { s.activeLink }>Registration</NavLink>\n\t\t\t\t</div>\n\t\t\t\t<div className={ s.item }>\n\t\t\t\t\t<NavLink to={ PATH.PASSWORD_RECOVERY } activeClassName = { s.activeLink }>Password recovery</NavLink>\n\t\t\t\t</div>\n\t\t\t\t{/*<div className={ s.item }>*/}\n\t\t\t\t{/*\t<NavLink to={ PATH.NEW_PASSWORD } activeClassName = { s.activeLink }>New password</NavLink>*/}\n\t\t\t\t{/*</div>*/}\n\t\t\t\t<div className={ s.item }>\n\t\t\t\t\t<NavLink to={ PATH.PACKS } activeClassName = { s.activeLink }>Packs</NavLink>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Header\n","import React from 'react'\nimport './App.css'\nimport {HashRouter} from 'react-router-dom'\nimport Routes from './Component/Routes/Routes'\nimport Header from './Component/Header/Header'\n\n\nfunction App() {\n    return (\n        <>\n          <HashRouter>\n            <Header/>\n            <Routes/>\n          </HashRouter>\n        </>\n    )\n}\n\nexport default App\n","import {applyMiddleware, combineReducers, createStore} from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport {appReducer} from './appReducer'\nimport { authReducer } from './authReducer'\nimport {loginReducer} from \"./loginReducer\";\nimport {forgotReducer} from \"./forgotReducer\";\nimport { profileReducer } from './profileReducer';\nimport {packsReducer} from \"./packReducer\";\n\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    app: appReducer,\n    login: loginReducer,\n    profile: profileReducer,\n    passRec: forgotReducer,\n    pack: packsReducer\n})\n\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware))\n\n\nexport type AppRootStateType = ReturnType<typeof rootReducer>\n\n// @ts-ignore\nwindow.store = store;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport {Provider} from 'react-redux'\nimport {store} from './redux/store'\nimport {BrowserRouter, HashRouter} from 'react-router-dom'\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </BrowserRouter>,\n    document.getElementById('root')\n)\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Header_nav__3rYIR\",\"menuHover\":\"Header_menuHover__2eDeL\",\"items\":\"Header_items__3t3lP\",\"item\":\"Header_item__11opL\",\"activeLink\":\"Header_activeLink__3WAn0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Packs_container__8PjF6\",\"header\":\"Packs_header__3nazv\",\"cardPacksWrapper\":\"Packs_cardPacksWrapper__3wp-X\",\"card\":\"Packs_card__3YlLU\",\"buttonsWrapper\":\"Packs_buttonsWrapper__1BcVC\",\"packs\":\"Packs_packs__H4xo7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"passRecOverlay\":\"PasswordRecovery_passRecOverlay__dDdKX\",\"nameRecPass\":\"PasswordRecovery_nameRecPass__2C3uT\",\"formRecPass\":\"PasswordRecovery_formRecPass__l0PYz\"};"],"sourceRoot":""}