{"version":3,"sources":["Component/Pages/NewPassword/NewPassword.module.css","Component/Pages/Registration/Registration.module.css","Component/Pages/Profile/Profile.module.css","Component/Pages/Error404/Error404.module.css","Component/Pagination/Pagination.module.css","redux/profileReducer.ts","Component/Pages/Error404/Error404.tsx","api/api.ts","redux/authReducer.ts","redux/appReducer.ts","redux/loginReducer.ts","redux/forgotReducer.ts","Component/Pages/Login/Login.tsx","redux/packReducer.ts","Component/Pages/NewPassword/NewPassword.tsx","Component/Pages/PasswordRecovery/PasswordRecovery.tsx","Component/Pages/Registration/Registration.tsx","Component/Pages/Profile/Profile.tsx","Component/Pagination/Pagination.tsx","Component/Packs/Packs.tsx","Component/Routes/Routes.tsx","Component/Header/Header.tsx","App.tsx","redux/store.ts","index.tsx","Component/Header/Header.module.css","Component/Packs/Packs.module.css","Component/Pages/PasswordRecovery/PasswordRecovery.module.css"],"names":["module","exports","ACTIONS_TYPE","Error404","className","s","errorOverlay","instance","axios","create","baseURL","withCredentials","headers","API","email","password","post","then","response","data","rememberMe","delete","from","message","resetPasswordToken","CARDAPI","pageNumber","name","get","res","initialState","profile","isLogin","isRegistered","error","setIsLogin","value","type","SET_IS_LOGIN","setError","SET_ERROR","setRegistration","dispatch","SET_IS_REGISTERED","catch","err","isInitialized","status","isInitializedAC","SET_INITIALIZED_APP","ACTION_TYPE","isLoggedIn","setIsLoggedInAC","setIsErrorAC","SET_IS_ERROR","loginTC","SET_PROFILE","Login","useDispatch","useSelector","state","login","formik","useFormik","initialValues","validate","values","errors","test","length","onSubmit","resetForm","to","Grid","container","justify","item","xs","handleSubmit","FormControl","FormGroup","TextField","label","margin","getFieldProps","touched","style","color","FormControlLabel","control","Checkbox","checked","Button","variant","info","infoNewPass","errorNewPass","setErrorPassRec","setErrorNewPass","SET_ERROR_NEW_PASS","sendEmailPassRecTC","SET_OK","newPassTC","SET_OK_NEW_PASS","NewPassword","passRec","history","useHistory","location","pathname","slice","newPassOverlay","spanText","labelCol","span","wrapperCol","remember","onFinish","newPassword1","setTimeout","onFinishFailed","errorInfo","console","log","Item","hasFeedback","rules","required","getFieldValue","validator","_","Promise","reject","Error","resolve","Password","htmlType","PasswordRecovery","errorPassRec","infoPassRec","passRecOverlay","nameRecPass","formRecPass","emailRecPass","Registration","auth","registrationOverlay","password1","width","serverError","Profile","profileOverlay","src","avatar","alt","token","_id","created","isAdmin","onClick","cardPacks","cardPacksTotalCount","maxCardsCount","minCardsCount","page","pageCount","getCardPacksTC","cards","SET_CARD_PACKS","SET_PAGE_COUNT","SET_PACKS_TOTAL_COUNT","setCardPacksTotalCountAC","PaginationComp","props","pagination","showQuickJumper","defaultCurrent","total","totalItemCount","onChange","onChangePage","Packs","pack","useEffect","header","marginRight","map","k","i","cardPacksWrapper","card","cardsCount","updated","shape","icon","EditTwoTone","DeleteTwoTone","PATH","Routes","path","exact","render","Header","nav","menuHover","items","activeClassName","activeLink","App","rootReducer","combineReducers","action","app","CHANGE_STATUS","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.f657a601.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"newPassOverlay\":\"NewPassword_newPassOverlay__b9vqv\",\"spanText\":\"NewPassword_spanText__VadMp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registrationOverlay\":\"Registration_registrationOverlay__RaPqu\",\"serverError\":\"Registration_serverError__1TzMU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileOverlay\":\"Profile_profileOverlay__2Yrcx\",\"profile\":\"Profile_profile__3wCMr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorOverlay\":\"Error404_errorOverlay__35HNd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Pagination_pagination__38iEN\"};","\r\nexport enum ACTIONS_TYPE {\r\n    SET_PROFILE = 'loginReducer/SET_PROFILE',\r\n}\r\nexport type ProfileType = {\r\n    avatar: string\r\n    created: string\r\n    email: string\r\n    isAdmin: boolean\r\n    name: string\r\n    publicCardPacksCount: number\r\n    rememberMe: boolean\r\n    token: string\r\n    tokenDeathTime: number\r\n    updated: string\r\n    verified: boolean\r\n    __v: number\r\n    _id: string\r\n}\r\nconst initialState = {\r\n    profile: null as null | ProfileType\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const profileReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case ACTIONS_TYPE.SET_PROFILE:\r\n            return {...state, profile: action.profile}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\n\r\nexport const setProfileAC = (profile: ProfileType) => ({type: ACTIONS_TYPE.SET_PROFILE, profile} as const)\r\n\r\n//thunks\r\n\r\n\r\n//types\r\ntype ActionsType = ReturnType<typeof setProfileAC>\r\n","import React from 'react'\r\nimport s from './Error404.module.css'\r\n\r\nexport const Error404 = () => {\r\n\treturn (\r\n\t\t<div className={s.errorOverlay}>\r\n\t\t\tpage 404\r\n\t\t\tpage 404\r\n\t\t\tpage 404\r\n\t\t\tpage 404\r\n\t\t\tpage 404\r\n\t\t\tpage 404\r\n\t\t\tpage 404\r\n\t\t\tpage 404\r\n\t\t\tpage 404\r\n\t\t\tpage 404\r\n\t\t\tpage 404\r\n\t\t\tpage 404\r\n\r\n\t\t</div>\r\n\t)\r\n}","import axios from 'axios'\r\nimport {CardPackType} from \"../redux/packReducer\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/', //heroku\r\n    // baseURL: 'http://localhost:7542/2.0/',  //local\r\n    withCredentials: true,\r\n    headers: {}\r\n})\r\n\r\nexport const API = {\r\n    registration: (email: string, password: string) => {\r\n        return instance.post<RegistrationPostResponseType>('/auth/register', {email, password}).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    authMe: () => {\r\n        return instance.get('auth/me').then(res => {\r\n            return res.data\r\n        })\r\n    },\r\n    login: (email: string | null, password: string | null, rememberMe: boolean = true) => {\r\n        return instance.post<LoginResponseType>('auth/login', {email, password, rememberMe}).then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    logOut: () => {\r\n        return instance.delete<LogOutResponseType>(`auth/me`)\r\n    },\r\n    //for passRecovery\r\n    passRec: (email: string, from: string, message: string) => {\r\n        return instance.post<PassRecResponseType>('auth/forgot', {email, from, message})\r\n          .then(response => { return response.data })\r\n    },\r\n    newPass: (password: string, resetPasswordToken: string) => {\r\n        return instance.post<NewPassResponseType> ('auth/set-new-password', {password, resetPasswordToken})\r\n          .then(response => { return response.data })\r\n    }\r\n\r\n}\r\nexport const CARDAPI = {\r\n    getCardPacks:( pageNumber: number = 1, name: string = '', ) => {\r\n        return instance.get<GetCardPacksResponseType>(`cards/pack?packName${name}&page=${pageNumber}&pageCount=10 `).then(res => res.data)\r\n    },\r\n}\r\n\r\n\r\n//types\r\nexport type LogOutResponseType = {\r\n    info: string\r\n    error: string\r\n}\r\n\r\nexport type LoginResponseType = {\r\n    avatar: string\r\n    created: string\r\n    email: string\r\n    isAdmin: boolean\r\n    name: string\r\n    publicCardPacksCount: number\r\n    rememberMe: boolean\r\n    token: string\r\n    tokenDeathTime: number\r\n    updated: string\r\n    verified: boolean\r\n    __v: number\r\n    _id: string\r\n}\r\n\r\nexport type AuthLoginType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: true\r\n}\r\n\r\nexport type RegistrationPostDataType = { email: string, password: string }\r\nexport type RegistrationPostResponseType = { addedUser: any, error?: string }\r\n\r\n//for PasswordRec\r\nexport type PassRecType = {\r\n    email: string\r\n    from: string\r\n    message: string\r\n}\r\nexport type PassRecResponseType = {\r\n    answer: boolean\r\n    html: boolean\r\n    info: string\r\n    success: boolean\r\n}\r\n\r\n//types for Cards\r\nexport type GetCardPacksResponseType = {\r\n    cardPacks: Array<CardPackType>\r\n    cardPacksTotalCount: number\r\n    maxCardsCount: number\r\n    minCardsCount: number\r\n    page: number\r\n    pageCount: number\r\n}\r\n\r\nexport type AddPackType = {\r\n    name?: string\r\n    deckCover?: string\r\n    private?: boolean\r\n}\r\n\r\nexport type UpdatePackType = {\r\n    _id: string\r\n    name?: string\r\n}\r\n\r\nexport type NewPassResponseType = {\r\n    info: string\r\n    error: string\r\n}\r\n","import  { RegistrationPostDataType, API} from \"../api/api\"\r\nimport {Dispatch} from 'redux'\r\n\r\n\r\nexport enum ACTIONS_TYPE {\r\n    SET_IS_LOGIN = 'authReducer/SET_IS_LOGIN',\r\n    SET_IS_REGISTERED = 'authReducer/SET_IS_REGISTERED',\r\n    SET_ERROR = 'authReducer/SET_ERROR',\r\n}\r\n\r\nconst initialState = {\r\n    isLogin: false,\r\n    isRegistered: false,\r\n    error: ''\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const authReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case ACTIONS_TYPE.SET_IS_LOGIN:\r\n            return {...state, isLogin: action.value}\r\n        case ACTIONS_TYPE.SET_IS_REGISTERED:\r\n            return {...state, isRegistered: action.value}\r\n        case ACTIONS_TYPE.SET_ERROR:\r\n            return {...state, error: action.error}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setIsLogin = (value: boolean) => ({type: ACTIONS_TYPE.SET_IS_LOGIN, value} as const)\r\nexport const setIsRegistered = (value: boolean) => ({type: ACTIONS_TYPE.SET_IS_REGISTERED, value} as const)\r\nexport const setError = (error: string) => ({type: ACTIONS_TYPE.SET_ERROR, error} as const)\r\n\r\n// thunks\r\nexport const setRegistration = (data: RegistrationPostDataType) => (dispatch: Dispatch) => {\r\n    API.registration(data.email, data.password)\r\n        .then(res => {\r\n            dispatch(setIsRegistered(true))})\r\n        .catch(err => {\r\n            dispatch(setError('Email already exists'))\r\n        })\r\n\r\n}\r\n\r\n// types\r\ntype ActionsType =\r\n    | ReturnType<typeof setIsLogin>\r\n    | ReturnType<typeof setIsRegistered>\r\n    | ReturnType<typeof setError>\r\n","import {Dispatch} from 'redux'\r\nimport {API} from \"../api/api\";\r\n\r\nexport enum ACTIONS_TYPE {\r\n    SET_INITIALIZED_APP = 'appReducer/SET_INITIALIZED_APP',\r\n    CHANGE_STATUS= 'appReducer/CHANGE_STATUS',\r\n}\r\n\r\nconst initialState = {\r\n    isInitialized: false,\r\n    status: 'idle',\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const appReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        // case ACTIONS_TYPE.SET_INITIALIZED_APP:\r\n        //     return {...state, isInitialized: action.value}\r\n        case ACTIONS_TYPE.CHANGE_STATUS:\r\n            return {...state, isInitialized: action.value}\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const isInitializedAC = (value: boolean) => ({type: ACTIONS_TYPE.SET_INITIALIZED_APP, value} as const)\r\nexport const change_statusAC = (value: boolean) => ({type: ACTIONS_TYPE.CHANGE_STATUS, value} as const)\r\n// thunks\r\n\r\nexport const initializeAppTC = () => (dispatch: Dispatch) => {\r\n    API.authMe()\r\n        .then(res => {\r\n            dispatch(isInitializedAC(true))\r\n    })\r\n}\r\n// types\r\ntype ActionsType =\r\n    | ReturnType<typeof isInitializedAC>\r\n    | ReturnType<typeof change_statusAC>\r\n","import  {AuthLoginType, API} from '../api/api'\r\nimport {Dispatch} from 'redux'\r\nimport {setProfileAC} from './profileReducer'\r\nimport {setIsLogin} from \"./authReducer\";\r\nimport {initializeAppTC, isInitializedAC} from './appReducer'\r\n\r\nexport enum ACTIONS_TYPE {\r\n    SET_IS_LOGIN = 'loginReducer/SET-IS-LOGGED-IN',\r\n    SET_IS_ERROR = 'loginReducer/SET-IS-ERROR',\r\n}\r\n\r\nconst initialState = {\r\n    isLoggedIn: false,\r\n    error: '',\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const loginReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case ACTIONS_TYPE.SET_IS_LOGIN:\r\n            return {...state, isLoggedIn: action.value}\r\n        case ACTIONS_TYPE.SET_IS_ERROR:\r\n            return {...state, error: action.error}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const setIsLoggedInAC = (value: boolean) => ({type: ACTIONS_TYPE.SET_IS_LOGIN, value} as const)\r\nexport const setIsErrorAC = (error: string) => ({type: ACTIONS_TYPE.SET_IS_ERROR, error} as const)\r\n\r\n//thunks\r\nexport const loginTC = (data: AuthLoginType) => (dispatch: Dispatch) => {\r\n    API.login(data.email, data.password, data.rememberMe)\r\n        .then(res => {\r\n            dispatch(setIsLoggedInAC(true))\r\n            dispatch(setIsLogin(true))\r\n            dispatch(isInitializedAC(true))\r\n            dispatch(setProfileAC(res))\r\n            initializeAppTC()\r\n\r\n        })\r\n        .catch(err => {\r\n            dispatch(setIsErrorAC(err.error))\r\n        })\r\n}\r\nexport const logOutTC = () => (dispatch: Dispatch) => {\r\n    API.logOut()\r\n        .then(res => {\r\n            dispatch(setIsLoggedInAC(false))\r\n            dispatch(setIsLogin(false))\r\n            dispatch(isInitializedAC(false))\r\n        })\r\n        .catch(err => {\r\n            dispatch(setIsErrorAC(err.error))\r\n        })\r\n}\r\n\r\n//types\r\ntype ActionsType = ReturnType<typeof setIsLoggedInAC> | ReturnType<typeof setIsErrorAC>\r\n\r\n\r\n","import {PassRecType, API} from '../api/api'\r\nimport {Dispatch} from 'redux'\r\n\r\nenum ACTION_TYPE {\r\n\tSET_OK = 'forgotReducer/SET_OK',\r\n\tSET_ERROR = 'forgotReducer/SET_ERROR',\r\n\tSET_OK_NEW_PASS = 'forgotReducer/SET_OK_NEW_PASS',\r\n\tSET_ERROR_NEW_PASS = 'forgotReducer/SET_ERROR_NEW_PASS'\r\n}\r\n\r\nconst initialState = {\r\n\tinfo: 'To recover your password, enter your registration email:',\r\n\tinfoNewPass: 'Enter you new password: ',\r\n\terror: '',\r\n\terrorNewPass: ''\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const forgotReducer = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\r\n\tswitch (action.type) {\r\n\t\tcase ACTION_TYPE.SET_OK:\r\n\t\t\treturn {...state, info: action.info}\r\n\t\tcase ACTION_TYPE.SET_ERROR:\r\n\t\t\treturn {...state, error: action.error}\r\n\t\tcase ACTION_TYPE.SET_OK_NEW_PASS:\r\n\t\t\treturn {...state, infoNewPass: action.infoNewPass}\r\n\t\tcase ACTION_TYPE.SET_ERROR_NEW_PASS:\r\n\t\t\treturn {...state, errorNewPass: action.errorNewPass}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\nexport const setOkPassRecAC = (info: string) => ({type: ACTION_TYPE.SET_OK, info } as const)\r\nexport const setErrorPassRec = (error: string) => ({type: ACTION_TYPE.SET_ERROR, error} as const)\r\n\r\nexport const setOkNewPassAC = (infoNewPass: string) => ({type: ACTION_TYPE.SET_OK_NEW_PASS, infoNewPass} as const)\r\nexport const setErrorNewPass = (errorNewPass: string) => ({type: ACTION_TYPE.SET_ERROR_NEW_PASS, errorNewPass } as const)\r\n\r\n\r\nexport const sendEmailPassRecTC = (data: PassRecType) => (dispatch: Dispatch<ActionType>) => {\r\n\tAPI.passRec(data.email, data.from, data.message)\r\n\t\t.then(response => { dispatch(setOkPassRecAC( response.info ))})\r\n\t\t.catch(error => { dispatch(setErrorPassRec('Such email is not registered'))})\r\n}\r\n\r\nexport const newPassTC = (password: string, resetPasswordToken: string) => (dispatch: Dispatch<ActionType>) => {\r\n\tAPI.newPass(password, resetPasswordToken)\r\n\t\t.then(res => {dispatch(setOkNewPassAC('password change'))})\r\n\t\t.catch(err => {dispatch(setErrorNewPass('error new password'))})\r\n}\r\n\r\ntype ActionType = ReturnType<typeof setOkPassRecAC>\r\n  \t\t\t\t\t\t\t| ReturnType<typeof setErrorPassRec>\r\n\t\t\t\t\t\t\t\t| ReturnType<typeof setOkNewPassAC>\r\n\t\t\t\t\t\t\t\t| ReturnType<typeof setErrorNewPass>\r\n\r\n","import React, {useEffect} from 'react'\r\nimport s from './Login.module.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useFormik} from \"formik\";\r\nimport {Checkbox, FormControl, FormControlLabel, FormGroup, TextField, Button, Grid} from '@material-ui/core'\r\nimport {loginTC} from \"../../../redux/loginReducer\";\r\nimport {AppRootStateType} from \"../../../redux/store\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport { initializeAppTC } from '../../../redux/appReducer';\r\n\r\n\r\n\r\nexport type AuthLoginType = {\r\n\temail: string\r\n\tpassword: string\r\n\trememberMe: true\r\n}\r\ntype FormikErrorType = {\r\n\temail?: string,\r\n\tpassword?: string,\r\n\trememberMe?: boolean,\r\n}\r\n\r\nexport const Login = () => {\r\n\tconst dispatch = useDispatch()\r\n\tconst isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.login.isLoggedIn)\r\n\r\n\r\n\tconst formik = useFormik({\r\n\t\tinitialValues: {\r\n\t\t\temail: 'nya-admin@nya.nya',\r\n\t\t\tpassword: '1qazxcvBG',\r\n\t\t\trememberMe: true\r\n\t\t},\r\n\t\tvalidate: (values: AuthLoginType) => {\r\n\t\t\tconst errors: FormikErrorType = {};\r\n\t\t\tif (!values.email) {\r\n\t\t\t\terrors.email = 'Поле email обязательно';\r\n\t\t\t} else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n\t\t\t\terrors.email = 'Невалидный email';\r\n\t\t\t} if (!values.password) {\r\n\t\t\t\terrors.password = 'Поле обязательно';\r\n\t\t\t} else if(values.password.length < 3) {\r\n\t\t\t\terrors.password = 'Длина пароля должна быть больше 3 символов';\r\n\t\t\t}\r\n\t\t\treturn errors;\r\n\t\t},\r\n\t\tonSubmit: values => {\r\n\t\t\tdispatch(loginTC({email:values.email, password:values.password, rememberMe: values.rememberMe}))\r\n\t\t\tformik.resetForm();\r\n\t\t},\r\n\t})\r\n\r\n\tif(isLoggedIn) {\r\n\t\treturn <Redirect to={'/profile'}/>\r\n\t}\r\n\r\n\treturn <Grid container justify=\"center\">\r\n\t\t<Grid item xs={4}>\r\n\t\t\t<form onSubmit={formik.handleSubmit}>\r\n\t\t\t\t<FormControl>\r\n\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t<p>To log in use common test account credentials:</p>\r\n\t\t\t\t\t\t<p><span>Email: </span> nya-admin@nya.nya</p>\r\n\t\t\t\t\t\t<p><span>Password: </span> 1qazxcvBG</p>\r\n\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\tlabel=\"Email\"\r\n\t\t\t\t\t\t\tmargin=\"normal\"\r\n\t\t\t\t\t\t\t{...formik.getFieldProps('email')}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{formik.touched.email && formik.errors.email ? <div style={{color: \"red\"}}>{formik.errors.email}</div> : null}\r\n\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\tlabel=\"Password\"\r\n\t\t\t\t\t\t\tmargin=\"normal\"\r\n\t\t\t\t\t\t\t{...formik.getFieldProps('password')}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{formik.touched.password && formik.errors.password ? <div style={{color: \"red\"}}>{formik.errors.password}</div> : null}\r\n\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\tlabel={'Remember me'}\r\n\t\t\t\t\t\t\tcontrol={<Checkbox\r\n\t\t\t\t\t\t\t\tchecked={formik.values.rememberMe}\r\n\t\t\t\t\t\t\t\t{...formik.getFieldProps('rememberMe')}\r\n\t\t\t\t\t\t\t/>}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{formik.touched.rememberMe && formik.errors.rememberMe ? <div style={{color: \"red\"}}>{formik.errors.rememberMe}</div> : null}\r\n\t\t\t\t\t\t<Button type={'submit'} variant={'contained'} color={'primary'}>Login</Button>\r\n\t\t\t\t\t</FormGroup>\r\n\t\t\t\t</FormControl>\r\n\t\t\t</form>\r\n\r\n\t\t</Grid>\r\n\t</Grid>\r\n}\r\n","import {Dispatch} from \"redux\";\r\nimport {CARDAPI} from \"../api/api\";\r\n\r\n\r\nexport enum ACTIONS_TYPE {\r\n    SET_CARD_PACKS = 'packsReducer/SET_CARD_PACKS',\r\n    SET_PAGE_COUNT = 'packsReducer/SET_PAGE_COUNT',\r\n    SET_PACKS_TOTAL_COUNT = 'packsReducer/SET_PACKS_TOTAL_COUNT',\r\n}\r\n\r\nconst initialState = {\r\n    cardPacks: [] as Array<CardPackType>,\r\n    cardPacksTotalCount: 0,\r\n    maxCardsCount: 1000,\r\n    minCardsCount: 0,\r\n    page: 1,\r\n    pageCount: 10,\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\n\r\nexport const packsReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case ACTIONS_TYPE.SET_CARD_PACKS:\r\n            return {\r\n                ...state,\r\n                cardPacks: [...action.cards]\r\n            }\r\n        case ACTIONS_TYPE.SET_PAGE_COUNT:\r\n            return {\r\n                ...state,\r\n                pageCount: action.value\r\n            }\r\n        case ACTIONS_TYPE.SET_PACKS_TOTAL_COUNT:\r\n            return {\r\n                ...state,\r\n                cardPacksTotalCount: action.value\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const setCardPacksAC = (cards: Array<CardPackType>) => ({type: ACTIONS_TYPE.SET_CARD_PACKS, cards} as const)\r\nexport const setCardPacksPageCountAC = (value: number) => ({type: ACTIONS_TYPE.SET_PAGE_COUNT, value} as const)\r\nexport const setCardPacksTotalCountAC = (value: number) => ({type: ACTIONS_TYPE.SET_PACKS_TOTAL_COUNT, value} as const)\r\n\r\n//thunks\r\nexport const getCardPacksTC = (pageNumber?: number) => (dispatch: Dispatch) => {\r\n    CARDAPI.getCardPacks(pageNumber).then(res => {\r\n        dispatch(setCardPacksAC(res.cardPacks))\r\n        dispatch(setCardPacksPageCountAC(res.pageCount))\r\n        dispatch(setCardPacksTotalCountAC(res.cardPacksTotalCount))\r\n    })\r\n\r\n}\r\n\r\n\r\n//types\r\nexport type ActionsType =\r\n    | ReturnType<typeof setCardPacksAC>\r\n    | ReturnType<typeof setCardPacksPageCountAC>\r\n    | ReturnType<typeof setCardPacksTotalCountAC>\r\n\r\nexport type CardPackType = {\r\n    \"_id\": string\r\n    \"user_id\": string\r\n    \"user_name\": string\r\n    \"private\": boolean\r\n    \"name\": string\r\n    \"path\": string\r\n    \"grade\": number\r\n    \"shots\": number\r\n    \"cardsCount\": number\r\n    \"type\": string\r\n    \"rating\": number\r\n    \"created\": string\r\n    \"updated\": string\r\n    \"more_id\": string\r\n    \"__v\": number\r\n    \"deckCover\": null | any\r\n}\r\n","import React from 'react'\r\nimport s from './NewPassword.module.css'\r\nimport {Button, Form, Input} from \"antd\"\r\nimport {newPassTC, setErrorNewPass} from '../../../redux/forgotReducer'\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport {AppRootStateType} from \"../../../redux/store\";\r\n\r\nexport const NewPassword = () => {\r\n\r\n\tconst dispatch = useDispatch()\r\n\tconst error = useSelector<AppRootStateType, string>(state => state.passRec.errorNewPass)\r\n\tconst infoNewPass = useSelector<AppRootStateType, string>(state => state.passRec.infoNewPass)\r\n\r\n\tconst history = useHistory()\r\n\r\n\tconst resetPasswordToken = history.location.pathname.slice(10, history.location.pathname.length)\r\n\t// alert (resetPasswordToken)\r\n\r\n\tconst layout = {\r\n\t\tlabelCol: {span: 8},\r\n\t\twrapperCol: {span: 16},\r\n\t}\r\n\r\n\tconst onFinish = (values: any) => {\r\n\t\tdispatch( newPassTC(values.newPassword1, resetPasswordToken) )\r\n\t\tsetTimeout(() => {\r\n\t\t\tdispatch(setErrorNewPass(''))\r\n\t\t}, 5000)\r\n\t}\r\n\r\n\tconst onFinishFailed = (errorInfo: any) => {\r\n\t\tconsole.log('Failed:', errorInfo)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={s.newPassOverlay}>\r\n\t\t\t<span className={s.spanText}>{infoNewPass}</span>\r\n\t\t\t<Form  {...layout} name=\"basic\"\r\n\t\t\t       initialValues={{remember: true}}\r\n\t\t\t       onFinish={onFinish}\r\n\t\t\t       onFinishFailed={onFinishFailed}>\r\n\r\n\t\t\t\t<Form.Item label=\"new password: \" name=\"newPassword1\" hasFeedback\r\n\t\t\t\t           rules={[\r\n\t\t\t\t\t           {required: true, message: 'Please input your password!'},\r\n\t\t\t\t\t           ({getFieldValue}) => ({\r\n\t\t\t\t\t\t           validator(_, value) {\r\n\t\t\t\t\t\t\t           if (value.length < 8){return Promise.reject(new Error('8 and more symbols...'))} else\r\n\t\t\t\t\t\t\t           if (value.length > 8 || !value || getFieldValue('password1') === value) {\r\n\t\t\t\t\t\t\t\t           return Promise.resolve()\r\n\t\t\t\t\t\t\t           }\r\n\t\t\t\t\t\t\t           return Promise.reject(new Error('Two passwords do not match!'))\r\n\t\t\t\t\t\t           },\r\n\t\t\t\t\t           }),]}>\r\n\t\t\t\t\t<Input.Password/>\r\n\t\t\t\t</Form.Item>\r\n\r\n\t\t\t\t<Form.Item label=\"repeat password: \" name=\"newPassword2\"  hasFeedback\r\n\t\t\t\t           rules={[\r\n\t\t\t\t\t           {\r\n\t\t\t\t\t\t           required: true,\r\n\t\t\t\t\t\t           message: 'Please confirm your password!',\r\n\t\t\t\t\t           },\r\n\t\t\t\t\t           ({getFieldValue}) => ({\r\n\t\t\t\t\t\t           validator(_, value) {\r\n\t\t\t\t\t\t\t           if (value.length < 8){return Promise.reject(new Error('8 and more symbols...'))} else\r\n\t\t\t\t\t\t\t           if (value.length > 8 || !value || getFieldValue('password1') === value) {\r\n\t\t\t\t\t\t\t\t           return Promise.resolve()\r\n\t\t\t\t\t\t\t           }\r\n\t\t\t\t\t\t\t           return Promise.reject(new Error('Two passwords do not match!'))\r\n\t\t\t\t\t\t           },\r\n\t\t\t\t\t           }),\r\n\t\t\t\t           ]}>\r\n\t\t\t\t\t<Input.Password/>\r\n\t\t\t\t</Form.Item>\r\n\r\n\t\t\t\t<Button type=\"primary\" htmlType=\"submit\">change password</Button>\r\n\r\n\t\t\t</Form>\r\n\t\t\t<div>{error}</div>\r\n\t\t</div>\r\n\t)\r\n}","import React from 'react'\r\nimport {Form, Input, Button } from 'antd'\r\nimport s from './PasswordRecovery.module.css'\r\nimport {sendEmailPassRecTC, setErrorPassRec} from \"../../../redux/forgotReducer\"\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport {AppRootStateType} from \"../../../redux/store\"\r\n\r\nexport const PasswordRecovery = () => {\r\n\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst errorPassRec = useSelector<AppRootStateType, string>(state => state.passRec.error)\r\n\tconst infoPassRec = useSelector<AppRootStateType, string>(state => state.passRec.info)\r\n\r\n\tconst from = \"THE BEST MY TEAM baranov.sys@gmail.com\"\r\n\tconst message = `<div>\r\n\t\t\t\t\t\t\t\t\t\t\tвы отправили запрос на восстановления пароля, для продожения перейдите по ссылке:\r\n\t\t\t\t\t\t\t\t\t\t\t<a href='http://baranovaleksei.github.io/teamProject/#/new-pass/$token$'>link</a>\r\n\t\t\t\t\t\t\t\t\t\t\tесли это были на Вы - то ничего не делайте\r\n\t\t\t\t\t\t\t\t\t</div>`\r\n\r\n\r\n\tconst onFinish = (values: any) => {\r\n\t\tdispatch(sendEmailPassRecTC({email: values.emailRecPass, message: message, from: from}))\r\n\t\tsetTimeout(() => {\r\n\t\t\tdispatch(setErrorPassRec(''))\r\n\t\t}, 5000)\r\n\t}\r\n\tconst onFinishFailed = (errorInfo: any) => {\r\n\t\tconsole.log('Failed:', errorInfo)\r\n\t}\r\n\treturn (\r\n\t\t<div className={s.passRecOverlay}>\r\n\r\n\t\t\t<span className={s.nameRecPass}>{infoPassRec}</span>\r\n\t\t\t<Form className={s.formRecPass}\r\n\t\t\t\t  name=\"recoveryPass\"\r\n\t\t\t\t  initialValues={{remember: true}}\r\n\t\t\t\t  onFinish={onFinish}\r\n\t\t\t\t  onFinishFailed={onFinishFailed}>\r\n\r\n\t\t\t\t<Form.Item\r\n\t\t\t\t\tlabel=\"Email\"\r\n\t\t\t\t\tname=\"emailRecPass\"\r\n\t\t\t\t\trules={[{type: 'email', required: true, message: 'Please input your email'}]}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Input/>\r\n\r\n\t\t\t\t</Form.Item>\r\n\r\n\r\n\r\n\t\t\t\t<span className={s.nameRecPass}> {errorPassRec} </span>\r\n\t\t\t\t<Form.Item>\r\n\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\">\r\n\t\t\t\t\t\tsend message\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Form.Item>\r\n\r\n\t\t\t</Form>\r\n\t\t</div>\r\n\t)\r\n}","import React from 'react'\r\nimport s from './Registration.module.css'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {AppRootStateType} from '../../../redux/store'\r\nimport {setError, setRegistration} from '../../../redux/authReducer'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {Form, Input, Button} from 'antd'\r\n\r\n\r\nexport const Registration = () => {\r\n    const dispatch = useDispatch()\r\n    const isRegistered = useSelector<AppRootStateType, boolean>(state => state.auth.isRegistered)\r\n    const error = useSelector<AppRootStateType, string>(state => state.auth.error)\r\n    const layout = {\r\n        labelCol: {span: 8},\r\n        wrapperCol: {span: 16},\r\n    }\r\n    const onFinish = (values: any) => {\r\n        dispatch(setRegistration({email: values.email, password: values.password1}))\r\n        setTimeout(() => {\r\n            dispatch(setError(''))\r\n        }, 10000)\r\n    }\r\n\r\n    const onFinishFailed = (errorInfo: any) => {\r\n        console.log('Failed:', errorInfo)\r\n    }\r\n\r\n\r\n    if (isRegistered) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.registrationOverlay}>\r\n\r\n\r\n            <Form  {...layout} name=\"basic\"  initialValues={{remember: true}} onFinish={onFinish}\r\n                   onFinishFailed={onFinishFailed}>\r\n                <Form.Item label=\"email\" name=\"email\"\r\n                    rules={[\r\n                        {required: true, message: 'Please input your email!'},\r\n                        {type: 'email', message: 'The input is not valid E-mail!',}\r\n                    ]}>\r\n                    <Input style={{width: '100%'}} />\r\n                </Form.Item>\r\n\r\n                <Form.Item label=\"Password1\" name=\"password1\" hasFeedback\r\n                           rules={[\r\n                               {required: true, message: 'Please input your password!'},\r\n                               ({getFieldValue}) => ({\r\n                                   validator(_, value) {\r\n                                       if (value.length < 8){return Promise.reject(new Error('8 and more' +\r\n                                           ' symbols...'))} else\r\n                                       if (value.length >= 8 || !value || getFieldValue('password1') === value) {\r\n                                           return Promise.resolve()\r\n                                       }\r\n                                       return Promise.reject(new Error('Two passwords do not match!'))\r\n                                   },\r\n                               }),]}>\r\n                    <Input.Password/>\r\n                </Form.Item>\r\n\r\n                <Form.Item label=\"Password2\" name=\"password2\"  hasFeedback\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Please confirm your password!',\r\n                        },\r\n                        ({getFieldValue}) => ({\r\n                            validator(_, value) {\r\n                                if (value.length < 8){return Promise.reject(new Error('8 and more symbols...'))} else\r\n                                if (value.length >= 8 || !value || getFieldValue('password1') === value) {\r\n                                    return Promise.resolve()\r\n                                }\r\n                                return Promise.reject(new Error('Two passwords do not match!'))\r\n                            },\r\n                        }),\r\n                    ]}>\r\n                    <Input.Password/>\r\n                </Form.Item>\r\n\r\n                <Button type=\"primary\" htmlType=\"submit\">Button</Button>\r\n                <div className={s.serverError}>{error}</div>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport s from './Profile.module.css'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {AppRootStateType} from '../../../redux/store'\r\nimport {NavLink, Redirect} from 'react-router-dom'\r\nimport {ProfileType} from '../../../redux/profileReducer'\r\nimport {logOutTC} from '../../../redux/loginReducer'\r\n\r\nexport const Profile = () => {\r\n    const dispatch = useDispatch()\r\n    const isLoggedIn = useSelector<AppRootStateType, boolean>(state => state.login.isLoggedIn)\r\n    const profile = useSelector<AppRootStateType, ProfileType | null>(state => state.profile.profile)\r\n    const isLogin = useSelector<AppRootStateType,  boolean>(state=> state.auth.isLogin)\r\n\r\n    if (!isLoggedIn) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n    const logout = () => {\r\n    \tdispatch(logOutTC())\r\n\t}\r\n     return (\r\n        <div className={s.profileOverlay}>\r\n            {profile &&\r\n\t\t\t\t<div className={s.profile}>\r\n\t\t\t\t\t<img src={profile.avatar} alt=\"\"/>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\tname: {profile.name} <br/>\r\n\t\t\t\t\t\ttoken: {profile.token} <br/>\r\n\t\t\t\t\t\t_id: {profile._id}<br/>\r\n\t\t\t\t\t\temail: {profile.email}<br/>\r\n\t\t\t\t\t\tcreated: {profile.created}<br/>\r\n\t\t\t\t\t\tadmin: {profile.isAdmin ? 'yes' : 'no'}<br/>\r\n\r\n                        <NavLink to=\"/packs\"> Packs</NavLink>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div><button onClick={logout}>Log out</button></div>\r\n\r\n\t\t\t\t</div>\r\n\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, {FC} from 'react'\r\nimport s from './Pagination.module.css'\r\nimport {Pagination} from 'antd'\r\n\r\n\r\ntype PropsType = {\r\n    totalItemCount: number\r\n    onChangePage: (pageNumber: number) => void\r\n}\r\nexport const PaginationComp: FC<PropsType> = (props) => {\r\n\r\n    const onChange = (pageNumber: number) => {\r\n        props.onChangePage(pageNumber)\r\n\r\n    }\r\n    return (\r\n        <div className={s.pagination}>\r\n            <Pagination showQuickJumper defaultCurrent={1} total={props.totalItemCount} onChange={onChange}/>\r\n        </div>\r\n    )\r\n}","import React, {useEffect} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../redux/store\";\r\nimport s from './Packs.module.css'\r\nimport {CardPackType, getCardPacksTC} from \"../../redux/packReducer\";\r\nimport {Button} from \"antd\";\r\nimport {PaginationComp} from '../Pagination/Pagination'\r\nimport {Redirect} from 'react-router-dom'\r\nimport { DeleteTwoTone, EditTwoTone } from '@ant-design/icons'\r\n\r\nexport const Packs = () => {\r\n    const dispatch = useDispatch()\r\n    const cardPacksTotalCount = useSelector<AppRootStateType, number >(state => state.pack.cardPacksTotalCount)\r\n    const cardPacks = useSelector<AppRootStateType,  Array<CardPackType>>(state => state.pack.cardPacks)\r\n    const isLogin = useSelector<AppRootStateType,  boolean>(state => state.auth.isLogin)\r\n\r\n    const onChangePage = (pageNumber: number) => {\r\n        dispatch(getCardPacksTC(pageNumber))\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getCardPacksTC())\r\n    }, [])\r\n\r\n    if (!isLogin) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.container}>\r\n            <div className={s.header}>\r\n                <p>Name</p>\r\n                <p style={{marginRight: \"120px\"}}>cardsCount</p>\r\n                <p>updated</p>\r\n                <p>Add</p>\r\n            </div>\r\n            {cardPacks.map((k, i) => <ul key={i} className={s.cardPacksWrapper}>\r\n                <li className={s.card}>{k.name}</li>\r\n                <li className={s.card}>{k.cardsCount}</li>\r\n                <li className={s.card}>{k.updated}</li>\r\n                <Button type='default' style={{marginRight: \"5px\"}} shape={'circle'}  icon={<EditTwoTone />}/>\r\n                <Button type=\"default\" style={{marginRight: \"5px\"}} shape={'circle'} icon={<DeleteTwoTone/>} />\r\n            </ul>)}\r\n\r\n            <PaginationComp totalItemCount={cardPacksTotalCount} onChangePage={onChangePage}/>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useEffect} from 'react'\r\nimport {Switch, Route, Redirect} from 'react-router-dom'\r\nimport {Error404} from \"../Pages/Error404/Error404\";\r\nimport {Login} from \"../Pages/Login/Login\";\r\nimport {NewPassword} from \"../Pages/NewPassword/NewPassword\";\r\nimport {PasswordRecovery} from \"../Pages/PasswordRecovery/PasswordRecovery\";\r\nimport {Registration} from \"../Pages/Registration/Registration\";\r\nimport {Profile} from \"../Pages/Profile/Profile\";\r\nimport {Packs} from \"../Packs/Packs\";\r\n\r\nexport const PATH = {\r\n\tLOGIN: '/login',\r\n\tREGISTRATION: '/registration',\r\n\tPASSWORD_RECOVERY: '/pass-recovery',\r\n\tNEW_PASSWORD: '/new-pass',\r\n\tPROFILE: '/profile',\r\n\tPACKS: '/packs'\r\n}\r\n\r\nfunction Routes() {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Switch>\r\n\t\t\t\t{/*в начале мы попадаем на страницу \"/\" и переходим сразу на страницу Login*/}\r\n\t\t\t\t{/*exact нужен чтоб указать полное совподение (что после \"/\" ничего не будет)*/}\r\n\t\t\t\t<Route path={\"/\"} exact render={ () => <Redirect to={ PATH.LOGIN }/> }/>\r\n\t\t\t\t<Route path={\"/teamProject\"} exact render={ () => <Profile/> }/>\r\n\r\n\t\t\t\t<Route path={ PATH.LOGIN } render={ () => <Login/> } />\r\n\t\t\t\t<Route path={ PATH.REGISTRATION } render={ () => <Registration /> } />\r\n\t\t\t\t<Route path={ PATH.PASSWORD_RECOVERY } render={ ()=> <PasswordRecovery/> } />\r\n\t\t\t\t<Route path={ PATH.NEW_PASSWORD } render={ ()=> <NewPassword/> } />\r\n\t\t\t\t<Route path={ PATH.PROFILE } render={ ()=> <Profile/> } />\r\n\t\t\t\t<Route path={ PATH.PACKS } render={ ()=> <Packs/> } />\r\n\r\n\t\t\t\t<Route path={'/404'} render={() => <Error404/>}/>\r\n\t\t\t\t<Redirect from={'*'} to={'/404'}/>\r\n\r\n\t\t\t</Switch>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Routes\r\n","import React from 'react'\r\nimport s from './Header.module.css'\r\nimport {PATH} from \"../Routes/Routes\"\r\nimport {NavLink, Redirect} from 'react-router-dom'\r\nimport {useSelector} from 'react-redux'\r\nimport {AppRootStateType} from '../../redux/store'\r\n\r\nfunction Header() {\r\n\tconst isLogin = useSelector<AppRootStateType,  boolean>(state=> state.auth.isLogin)\r\n\r\n\treturn (\r\n\t\t<div className={s.nav}>\r\n\t\t\t<button className={ s.menuHover }> Меню </button>\r\n\t\t\t<div className={s.items}>\r\n\t\t\t\t{isLogin &&\r\n\r\n\t\t\t\t<div className={ s.item }>\r\n\t\t\t\t\t<NavLink to= { PATH.PROFILE } activeClassName = { s.activeLink }>Profile</NavLink>\r\n\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t\t{!isLogin && <div className={ s.item }>\r\n\t\t\t\t\t<NavLink to={ PATH.LOGIN } activeClassName = { s.activeLink }>Login</NavLink>\r\n\t\t\t\t</div>}\r\n\t\t\t\t{!isLogin &&<div className={ s.item }>\r\n\t\t\t\t\t<NavLink to={ PATH.REGISTRATION } activeClassName = { s.activeLink }>Registration</NavLink>\r\n\t\t\t\t</div>}\r\n\t\t\t\t{!isLogin &&<div className={ s.item }>\r\n\t\t\t\t\t<NavLink to={ PATH.PASSWORD_RECOVERY } activeClassName = { s.activeLink }>Password recovery</NavLink>\r\n\t\t\t\t</div>}\r\n\t\t\t\t{/*<div className={ s.item }>*/}\r\n\t\t\t\t{/*\t<NavLink to={ PATH.NEW_PASSWORD } activeClassName = { s.activeLink }>New password</NavLink>*/}\r\n\t\t\t\t{/*</div>*/}\r\n\t\t\t\t{isLogin &&\r\n\t\t\t\t\t<div className={ s.item } >\r\n\t\t\t\t\t\t<NavLink to={ PATH.PACKS } activeClassName = { s.activeLink }>Packs</NavLink>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport './App.css'\r\nimport {HashRouter} from 'react-router-dom'\r\nimport Routes from './Component/Routes/Routes'\r\nimport Header from './Component/Header/Header'\r\n\r\n\r\nfunction App() {\r\n    return (\r\n        <>\r\n          <HashRouter>\r\n            <Header/>\r\n            <Routes/>\r\n          </HashRouter>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import {applyMiddleware, combineReducers, createStore} from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport {appReducer} from './appReducer'\r\nimport { authReducer } from './authReducer'\r\nimport {loginReducer} from \"./loginReducer\";\r\nimport {forgotReducer} from \"./forgotReducer\";\r\nimport { profileReducer } from './profileReducer';\r\nimport {packsReducer} from \"./packReducer\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    login: loginReducer,\r\n    profile: profileReducer,\r\n    passRec: forgotReducer,\r\n    pack: packsReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunkMiddleware))\r\n\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\n// @ts-ignore\r\nwindow.store = store;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport {Provider} from 'react-redux'\r\nimport {store} from './redux/store'\r\nimport {BrowserRouter, HashRouter} from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>,\r\n    document.getElementById('root')\r\n)\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Header_nav__YEG9I\",\"menuHover\":\"Header_menuHover__1-ba6\",\"items\":\"Header_items__3vuA9\",\"item\":\"Header_item__3Lz70\",\"activeLink\":\"Header_activeLink__2EW1e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Packs_container__2X0zP\",\"header\":\"Packs_header__omh39\",\"cardPacksWrapper\":\"Packs_cardPacksWrapper__3s1LS\",\"card\":\"Packs_card__3nWcQ\",\"buttonsWrapper\":\"Packs_buttonsWrapper__3Cpof\",\"packs\":\"Packs_packs__3jsUK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"passRecOverlay\":\"PasswordRecovery_passRecOverlay__3J8hl\",\"nameRecPass\":\"PasswordRecovery_nameRecPass__3K2Op\",\"formRecPass\":\"PasswordRecovery_formRecPass__2ZGmD\"};"],"sourceRoot":""}